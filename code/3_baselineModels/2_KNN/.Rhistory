setwd("C:/Users/grees/OneDrive/Documents/Computer Science/Data Analytics/Audio-Emotion-Recognition")
prc<-read.csv("extractedData/details.csv", stringsAsFactors = FALSE)
str(prc)
table(prc$emotion)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x))) }
prc_n <- as.data.frame(lapply(prc[4:17], normalize))
summary(prc_n$cont_mn)
set.seed(123)
dat <- sample(1:nrow(prc_n),size=nrow(prc_n)*0.9,replace = FALSE)
prc_train1<- prc_n[dat,] # 70% training data
prc_test1<- prc_n[-dat,]
#prc_train <- prc_n[1:1340,]
#prc_test <- prc_n[1340:1440,]
prc_train_labels <- prc[dat,1]
prc_test_labels <- prc[-dat,1]
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
library(caret)
library(caret)
library(class)
library(gmodels)
setwd("C:/Users/grees/OneDrive/Documents/Computer Science/Data Analytics/Audio-Emotion-Recognition")
prc<-read.csv("extractedData/details.csv", stringsAsFactors = FALSE)
str(prc)
table(prc$emotion)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x))) }
prc_n <- as.data.frame(lapply(prc[4:17], normalize))
summary(prc_n$cont_mn)
set.seed(123)
dat <- sample(1:nrow(prc_n),size=nrow(prc_n)*0.9,replace = FALSE)
prc_train1<- prc_n[dat,] # 70% training data
prc_test1<- prc_n[-dat,]
#prc_train <- prc_n[1:1340,]
#prc_test <- prc_n[1340:1440,]
prc_train_labels <- prc[dat,1]
prc_test_labels <- prc[-dat,1]
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
confusionMatrix(table(prc_test_labels,prc_test_pred))
CrossTable(x=prc_test_labels, y=prc_test_pred, prop.chisq = FALSE)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
set.seed(123)
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
setwd("C:/Users/grees/OneDrive/Documents/Computer Science/Data Analytics/Audio-Emotion-Recognition")
prc<-read.csv("extractedData/details.csv", stringsAsFactors = FALSE)
str(prc)
table(prc$emotion)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x))) }
prc_n <- as.data.frame(lapply(prc[4:17], normalize))
summary(prc_n$cont_mn)
set.seed(123)
dat <- sample(1:nrow(prc_n),size=nrow(prc_n)*0.9,replace = FALSE)
prc_train1<- prc_n[dat,] # 70% training data
prc_test1<- prc_n[-dat,]
#prc_train <- prc_n[1:1340,]
#prc_test <- prc_n[1340:1440,]
prc_train_labels <- prc[dat,1]
prc_test_labels <- prc[-dat,1]
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
confusionMatrix(table(prc_test_labels,prc_test_pred))
CrossTable(x=prc_test_labels, y=prc_test_pred, prop.chisq = FALSE)
setwd("C:/Users/grees/OneDrive/Documents/Computer Science/Data Analytics/Audio-Emotion-Recognition")
prc<-read.csv("extractedData/details.csv", stringsAsFactors = FALSE)
str(prc)
table(prc$emotion)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x))) }
prc_n <- as.data.frame(lapply(prc[4:17], normalize))
summary(prc_n$cont_mn)
set.seed(123)
dat <- sample(1:nrow(prc_n),size=nrow(prc_n)*0.9,replace = FALSE)
prc_train1<- prc_n[dat,] # 70% training data
prc_test1<- prc_n[-dat,]
#prc_train <- prc_n[1:1340,]
#prc_test <- prc_n[1340:1440,]
prc_train_labels <- prc[dat,1]
prc_test_labels <- prc[-dat,1]
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
confusionMatrix(table(prc_test_labels,prc_test_pred))
CrossTable(x=prc_test_labels, y=prc_test_pred, prop.chisq = FALSE)
setwd("C:/Users/grees/OneDrive/Documents/Computer Science/Data Analytics/Audio-Emotion-Recognition")
prc<-read.csv("extractedData/details.csv", stringsAsFactors = FALSE)
#str(prc)
table(prc$emotion)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x))) }
prc_n <- as.data.frame(lapply(prc[4:17], normalize))
summary(prc_n$cont_mn)
set.seed(123)
dat <- sample(1:nrow(prc_n),size=nrow(prc_n)*0.9,replace = FALSE)
prc_train1<- prc_n[dat,] # 70% training data
prc_test1<- prc_n[-dat,]
#prc_train <- prc_n[1:1340,]
#prc_test <- prc_n[1340:1440,]
prc_train_labels <- prc[dat,1]
prc_test_labels <- prc[-dat,1]
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
confusionMatrix(table(prc_test_labels,prc_test_pred))
CrossTable(x=prc_test_labels, y=prc_test_pred, prop.chisq = FALSE)
setwd("C:/Users/grees/OneDrive/Documents/Computer Science/Data Analytics/Audio-Emotion-Recognition")
prc<-read.csv("extractedData/details.csv", stringsAsFactors = FALSE)
#str(prc)
#table(prc$emotion)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x))) }
prc_n <- as.data.frame(lapply(prc[4:17], normalize))
summary(prc_n$cont_mn)
set.seed(123)
dat <- sample(1:nrow(prc_n),size=nrow(prc_n)*0.9,replace = FALSE)
prc_train1<- prc_n[dat,] # 70% training data
prc_test1<- prc_n[-dat,]
#prc_train <- prc_n[1:1340,]
#prc_test <- prc_n[1340:1440,]
prc_train_labels <- prc[dat,1]
prc_test_labels <- prc[-dat,1]
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
confusionMatrix(table(prc_test_labels,prc_test_pred))
CrossTable(x=prc_test_labels, y=prc_test_pred, prop.chisq = FALSE)
setwd("C:/Users/grees/OneDrive/Documents/Computer Science/Data Analytics/Audio-Emotion-Recognition")
prc<-read.csv("extractedData/details.csv", stringsAsFactors = FALSE)
#str(prc)
table(prc$emotion)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x))) }
prc_n <- as.data.frame(lapply(prc[4:17], normalize))
#summary(prc_n$cont_mn)
set.seed(123)
dat <- sample(1:nrow(prc_n),size=nrow(prc_n)*0.9,replace = FALSE)
prc_train1<- prc_n[dat,] # 70% training data
prc_test1<- prc_n[-dat,]
#prc_train <- prc_n[1:1340,]
#prc_test <- prc_n[1340:1440,]
prc_train_labels <- prc[dat,1]
prc_test_labels <- prc[-dat,1]
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
confusionMatrix(table(prc_test_labels,prc_test_pred))
CrossTable(x=prc_test_labels, y=prc_test_pred, prop.chisq = FALSE)
N_ROWS(prc_n)
NROW(prc_n)
setwd("C:/Users/grees/OneDrive/Documents/Computer Science/Data Analytics/Audio-Emotion-Recognition")
prc<-read.csv("extractedData/details.csv", stringsAsFactors = FALSE)
#str(prc)
table(prc$emotion)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x))) }
prc_n <- as.data.frame(lapply(prc[4:17], normalize))
#summary(prc_n$cont_mn)
set.seed(123)
dat <- sample(1:nrow(prc_n),size=nrow(prc_n)*0.9,replace = FALSE)
prc_train1<- prc_n[dat,] # 70% training data
prc_test1<- prc_n[-dat,]
#prc_train <- prc_n[1:1340,]
#prc_test <- prc_n[1340:1440,]
prc_train_labels <- prc[dat,1]
prc_test_labels <- prc[-dat,1]
prc_test_pred <- knn(train = prc_train1, test = prc_test1,cl = prc_train_labels, k=30)
acc <- 100 * sum(prc_test_labels == prc_test_pred)/NROW(prc_test1)
acc
confusionMatrix(table(prc_test_labels,prc_test_pred))
CrossTable(x=prc_test_labels, y=prc_test_pred, prop.chisq = FALSE)
